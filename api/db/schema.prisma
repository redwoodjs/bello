datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

enum Role {
  admin
  coreteam
  partner
  startup
  contributor
  default
}

model Member {
  // We keep community informations here.
  // Meta.
  id          Int     @id @default(autoincrement())
  user        User    @relation(fields: [userId], references: [id])
  userId      Int
  // Data.
  title       String?
  description String?
  linkedin    String?
  discord     String?
}

model SkillSet {
  id     Int    @id @default(autoincrement())
  label  String @unique
  users  User[] @relation("Skillsets")
  user   User[] @relation("SkillsetStrength")
  idea   Idea?  @relation(fields: [ideaId], references: [id])
  ideaId Int?
}

model Skill {
  id     Int    @id @default(autoincrement())
  label  String @unique
  users  User[]
  Idea   Idea?  @relation(fields: [ideaId], references: [id])
  ideaId Int?
}

model Topic {
  id          Int    @id @default(autoincrement())
  label       String @unique
  description String @unique
  users       User[]
  Idea        Idea?  @relation(fields: [ideaId], references: [id])
  ideaId      Int?
}

model User {
  // Meta.
  id                  Int        @id @default(autoincrement())
  role                Role       @default(default)
  // Data.
  hasOnboarded        Boolean    @default(false)
  email               String     @unique
  username            String?    @unique
  firstname           String?
  lastname            String?
  avatar              String?
  // Auth
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  // Relationships.
  strength            SkillSet?   @relation("SkillsetStrength", fields: [strengthId], references: [id])
  strengthId          Int?
  skills              Skill[]
  skillSets           SkillSet[] @relation("Skillsets")
  topics              Topic[]
  authorOf            Idea[]     @relation("UserAuthorOfIdea")
  championFor         Idea[]     @relation("UserChampionOfIdea")
  captainFor          Idea[]     @relation("UserCaptainOfIdea")
  follows             Idea[]     @relation("UserInterestedInIdea")
  member              Member[]
}

model Idea {
  // Meta.
  id           Int        @id @default(autoincrement())
  author       User       @relation("UserAuthorOfIdea", fields: [authorId], references: [id])
  authorId     Int
  // Data.
  title        String     @unique
  problem      String     @unique
  solution     String?
  chat         String?
  conversation String?
  main         String?
  specs        String?
  // Relationships.
  captain      User?      @relation("UserCaptainOfIdea", fields: [captainId], references: [id])
  captainId    Int?
  champions    User[]     @relation("UserChampionOfIdea")
  topics       Topic[]
  hires        SkillSet[]
  technologies Skill[]
  followers    User[]     @relation("UserInterestedInIdea")
}
